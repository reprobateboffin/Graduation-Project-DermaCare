CREATE TABLE user (
         id INT AUTO_INCREMENT PRIMARY KEY,
          HealthCareNumber VARCHAR(50) UNIQUE,
         Clinic VARCHAR(100),
         FirstName VARCHAR(50),
         LastName VARCHAR(50),
        DateOfBirth DATE,
        Email VARCHAR(100) UNIQUE,
        PhoneNumber VARCHAR(20) UNIQUE,
        Preference ENUM('Email', 'Phone') DEFAULT 'Email'
    );
    ALTER TABLE user MODIFY id INT;  -- Remove AUTO_INCREMENT
ALTER TABLE user DROP PRIMARY KEY;  -- Drop existing primary key
ALTER TABLE user ADD PRIMARY KEY (HealthCareNumber);  -- Set new primary key

    //no command because i entered it using form in frontend

    CREATE TABLE appointments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    time TIME,
    doctor VARCHAR(100),
    booked BOOLEAN,
    date DATE
);

 ALTER TABLE appointments
    -> ADD CONSTRAINT fk_appointments_healthcard
    -> FOREIGN KEY (healthCardNumber)
    -> REFERENCES users(HealthCareNumber);
ERROR 1824 (HY000): Failed to open the referenced table 'users'
mysql> ALTER TABLE appointments
    -> ADD CONSTRAINT fk_appointments_healthcard
    -> FOREIGN KEY (healthCardNumber)
    -> REFERENCES user(HealthCareNumber);
INSERT INTO appointments (time, doctor, booked, date, clinic_name, healthCardNumber) VALUES
('09:00:00', 'Dr. Smith', 0, '2025-04-01', 'Manhattan', NULL),
('10:00:00', 'Dr. Jones', 0, '2025-04-01', 'Down Town', NULL),
('11:00:00', 'Dr. Patel', 0, '2025-04-02', 'Manhattan', NULL),
('13:00:00', 'Dr. Kim', 0, '2025-04-02', 'Down Town', NULL),
('14:00:00', 'Dr. Brown', 0, '2025-04-03', 'Manhattan', NULL),
('15:00:00', 'Dr. Davis', 0, '2025-04-03', 'Down Town', NULL),
('09:30:00', 'Dr. Garcia', 0, '2025-04-04', 'Manhattan', NULL),
('10:30:00', 'Dr. Wilson', 0, '2025-04-04', 'Down Town',NULL),
('11:30:00', 'Dr. Taylor', 0, '2025-04-05', 'Manhattan', NULL),
('13:30:00', 'Dr. Lee', 0, '2025-04-05', 'Down Town', NULL),
('14:30:00', 'Dr. Clark', 0, '2025-04-06', 'Manhattan', NULL),
('15:30:00', 'Dr. Adams', 0, '2025-04-06', 'Down Town', NULL),
('09:00:00', 'Dr. Evans', 0, '2025-04-07', 'Manhattan', NULL),
('10:00:00', 'Dr. Moore', 0, '2025-04-07', 'Down Town', NULL),
('11:00:00', 'Dr. Harris', 0, '2025-04-08', 'Manhattan', NULL),
('13:00:00', 'Dr. Young', 0, '2025-04-08', 'Down Town',NULL),
('14:00:00', 'Dr. Allen', 0, '2025-04-09', 'Manhattan', NULL),
('15:00:00', 'Dr. Wright', 0, '2025-04-09', 'Down Town', NULL),
('09:30:00', 'Dr. Scott', 0, '2025-04-10', 'Manhattan', NULL),
('10:30:00', 'Dr. Turner', 0, '2025-04-10', 'Down Town', NULL);

mysql> CREATE TRIGGER before_insert_appointments
    -> BEFORE INSERT ON appointments
    -> FOR EACH ROW
    -> BEGIN
    ->     IF NEW.booked = TRUE AND NEW.healthCardNumber IS NULL THEN
    ->         SIGNAL SQLSTATE '45000'
    ->         SET MESSAGE_TEXT = 'healthCardNumber must be provided when booked is true';
    ->     END IF;
    -> END;
    -> //
Query OK, 0 rows affected (0.02 sec)

mysql>
mysql> CREATE TRIGGER before_update_appointments
    -> BEFORE UPDATE ON appointments
    -> FOR EACH ROW
    -> BEGIN
    ->     IF NEW.booked = TRUE AND NEW.healthCardNumber IS NULL THEN
    ->         SIGNAL SQLSTATE '45000'
    ->         SET MESSAGE_TEXT = 'healthCardNumber must be provided when booked is true';
    ->     END IF;
    -> END;

DROP TRIGGER IF EXISTS before_insert_appointments;
DROP TRIGGER IF EXISTS before_update_appointments;


CREATE TABLE Products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    description VARCHAR(100),
    quantity INT,
    image VARCHAR(100)  
);
INSERT INTO Products (name, description, quantity, image)
VALUES 
('Cleanser strawberry', 'very effective and natural', 25, 'http://http://192.168.1.106:8000/media/products/strawberry_clnsr.jpg'),
('almond cleanser', 'Genuine product', 40, 'http://http://192.168.1.106:8000/media/products/almond_clnsr.jpg'),
('Orange Cleanser', 'Good for skin', 18, 'http://http://192.168.1.106:8000/media/products/orange_clnsr.jpg'),
('Bluetooth Speaker', 'Portable wireless speaker', 30, 'products/speaker.jpg'),
('Sunglasses Pro', 'UV400 polarized sunglasses', 50, 'products/sunglasses.jpg');


INSERT INTO Products (name, description, quantity, image, serialNumber, type, price)
VALUES
    -- Serum products (type: Serum, price: 4)
    ('Cerum Oil', 'Hydrating oil-based serum', 10, 'products/oil_cerum.jpeg', 'S1', 'Serum', 4),
    ('Vitamin C Cerum', 'Brightening vitamin C serum', 20, 'products/vitaminc_cerum.jpeg', 'S2', 'Serum', 4),
    ('Cerum Glow', 'Glow-enhancing serum', 30, 'products/glow_cerum.jpg', 'S3', 'Serum', 4),
    
    -- Sunscreen products (type: Sunscreen, price: 5)
    ('Sunscreen SPF 50', 'High-protection SPF 50', 10, 'media/products/spf50_sunscreen.jpeg', 'SC1', 'Sunscreen', 5),
    ('Mineral Sunscreen', 'Mineral-based sunscreen', 20, 'media/products/mineral_sunscreen.jpeg', 'SC2', 'Sunscreen', 5),
    ('Sunscreen Light', 'Lightweight SPF protection', 30, 'media/products/lite_sunscreen.jpeg', 'SC3', 'Sunscreen', 5);



    
mysql> CREATE TABLE cart_items (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     cart_id VARCHAR(255),
    ->     product_id VARCHAR(255),
    ->     quantity INT UNSIGNED DEFAULT 1,
    ->     UNIQUE KEY unique_cart_product (cart_id, product_id),
    ->     FOREIGN KEY (cart_id) REFERENCES user_carts(HealthCareNumber) ON DELETE CASCADE,
    ->     FOREIGN KEY (product_id) REFERENCES Products(serialNumber) ON DELETE CASCADE
    -> );
ERROR 6125 (HY000): Failed to add the foreign key constraint. Missing unique key for constraint 'cart_items_ibfk_2' in the referenced table 'products'
mysql> ALTER TABLE Products ADD UNIQUE (serialNumber);
Query OK, 0 rows affected (0.09 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> CREATE TABLE cart_items (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     cart_id VARCHAR(255),
    ->     product_id VARCHAR(255),
    ->     quantity INT UNSIGNED DEFAULT 1,
    ->     UNIQUE KEY unique_cart_product (cart_id, product_id),
    ->     FOREIGN KEY (cart_id) REFERENCES user_carts(HealthCareNumber) ON DELETE CASCADE,
    ->     FOREIGN KEY (product_id) REFERENCES Products(serialNumber) ON DELETE CASCADE
    -> );